{"ast":null,"code":"var _jsxFileName = \"/home/devil/Prashish/code/tic-tac-toe/src/Board.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Square } from \"./Square\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const [xIsNext, setxIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const winner = calculateWinner(squares);\n  function updateSquare(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    setSquares(nextSquares);\n    setxIsNext(!xIsNext);\n  }\n\n  // array ko index\n  //tyo index ma k value rakhni\n  //naya array square ma update garni\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => updateSquare(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => updateSquare(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => updateSquare(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => updateSquare(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => updateSquare(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => updateSquare(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => updateSquare(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => updateSquare(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => updateSquare(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Board, \"/iYeiMObBnIU6BJqK51DwR4g4iw=\");\n_c = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useState","Square","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","xIsNext","setxIsNext","squares","setSquares","Array","fill","winner","calculateWinner","updateSquare","i","nextSquares","slice","children","className","value","onSquareClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","lines","length","a","b","c","$RefreshReg$"],"sources":["/home/devil/Prashish/code/tic-tac-toe/src/Board.js"],"sourcesContent":["import { useState } from \"react\";\nimport { Square } from \"./Square\";\n\nexport default function Board() {\n  const [xIsNext, setxIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n\n  const winner = calculateWinner(squares);\n\n  function updateSquare(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    setSquares(nextSquares);\n    setxIsNext(!xIsNext);\n  }\n\n  // array ko index\n  //tyo index ma k value rakhni\n  //naya array square ma update garni\n\n  return (\n    <>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => updateSquare(0)} />\n        <Square value={squares[1]} onSquareClick={() => updateSquare(1)} />\n        <Square value={squares[2]} onSquareClick={() => updateSquare(2)} />\n      </div>\n\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => updateSquare(3)} />\n        <Square value={squares[4]} onSquareClick={() => updateSquare(4)} />\n        <Square value={squares[5]} onSquareClick={() => updateSquare(5)} />\n      </div>\n\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => updateSquare(6)} />\n        <Square value={squares[7]} onSquareClick={() => updateSquare(7)} />\n        <Square value={squares[8]} onSquareClick={() => updateSquare(8)} />\n      </div>\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}